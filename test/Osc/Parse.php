<?php
/**
 * unit tests for the intrnal parts of Osc_Parse
 *
 * PHP Version 5
 *
 * @category   PoscHP
 * @package    Test
 * @subpackage Osc
 * @author     Lucas S. Bickel <hairmare@purplehaze.ch>
 * @copyright  2011 Lucas S. Bickel 2011 - Alle Rechte vorbehalten
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 * @link       http://osc.purplehaze.ch
 */

/**
 * system under test
 **/
require_once 'Osc/Parse.php';

/**
 * Test class for Osc_Parse.
 *
 * Generated by PHPUnit on 2011-09-13 at 00:38:47.
 *
 * @class
 * @category   PoscHP
 * @package    Test
 * @subpackage Osc
 * @author     Lucas S. Bickel <hairmare@purplehaze.ch>
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 * @link       http://osc.purplehaze.ch
 */
class Osc_ParseTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Osc_Parse
     */
    protected $_object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->_object = new Osc_Parse;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * get a buffer from the test corpus
     */
    protected function getBuffer($name)
    {
        $file = dirname(__FILE__).'/test-corpus/'.$name.'.buf';
        return file_get_contents($file);
    }

    /**
     * test initial pre state engine buffer translation
     */
    public function testSetDataString()
    {
        // minimalistic test buffer made with lib/OSC.php
        $buf = $this->getBuffer('empty_oscbundle');

        $this->assertFalse($this->_object->hasData());

        $this->_object->setDataString($buf);

        $this->assertTrue($this->_object->hasData());
    }

    /**
     * same test as before with "raw" data
     */
    public function testSetData()
    {
        $abuf = array("2f","0","0","0","2c","0","0","0");

        $this->assertFalse($this->_object->hasData());

        $this->_object->setData($abuf);

        $this->assertTrue($this->_object->hasData());
    }

    /**
     * test debug mode setter
     */
    public function testSetDebug()
    {
        $this->assertTrue($this->_object->setDebug(true));
        $this->assertFalse($this->_object->setDebug(false));

        // test toggle mode
        $this->assertTrue($this->_object->setDebug());
        $this->assertFalse($this->_object->setDebug());
        $this->assertTrue($this->_object->setDebug());
    }

    /**
     * test for failing to fetch result
     *
     * @expectedException PHPUnit_Framework_Error_Warning
     */
    public function testGetResult()
    {
        $this->_object->getResult();
    }

    /**
     * test parsing the empty package from the corpus
     */
    public function testParse()
    {
        $buf = $this->getBuffer('empty_oscbundle');

        $this->_object->setDataString($buf);

        $this->_object->parse();

        $result = $this->_object->getResult();

        $this->assertEquals($result['address'], "/");
        $this->assertEquals($result['data'], array());
    }
}
